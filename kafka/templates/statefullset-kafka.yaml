apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.kafka.statefull.name }}
  lable:
    stateset: {{ .Values.kafka.statefull.name }}
spec:
  serviceName: {{ .Values.service.name }}
  replicas: {{ .Values.statefull.replicaCount }}
  selector:
    matchLabels:
      statefulset: {{ .Values.kafka.statefull.matchLabels }}
  template:
    metadata:
      labels:
        statefulset: {{ .Values.kafka.statefull.matchLabels }}
    spec:
      restartPolicy: {{ .Values.kafka.statefull.restartPolicy }}
      containers:
      - name: {{ .Values.kafka.statefull.container.anme }}
        image: {{ .Values.Values.kafka.statefull.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.kafka.statefull.image.pullPolicy }}
        resources:
            requests:
              cpu: {{ .Values.kafka.statefull.requests.cpu }}
              memory: {{ .Values.kafka.statefull.resources.requests.memory }}
            limits:
              cpu: {{ .Values.kafka.statefull.resources.limits.cpu }}
              memory: {{ .Values.kafka.statefull.resources.limits.memory }}
        envFrom:
        - configMapRef:
            name: {{ .Values.kafka.configmap.name }}

        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: {{ .Values.name }}-gluster-volume

      nodeSelector:
            name-node: {{ .Values.nodeSelector.nameNode1 }}

        volumes:
        - name: {{ .Values.name }}-gluster-volume
          glusterfs:
            endpoints: {{ .Values.name }}-endpoint
            path: volume1 
            readOnly: no