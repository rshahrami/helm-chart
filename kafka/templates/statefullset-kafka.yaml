apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.kafka.statefull.name }}
  lable:
    stateset: {{ .Values.kafka.statefull.name }}
spec:
  serviceName: {{ .Values.service.name }}
  replicas: {{ .Values.statefull.replicaCount }}
  selector:
    matchLabels:
      statefulset: {{ .Values.kafka.statefull.matchLabels}}
  template:
    metadata:
      labels:
        statefulset: {{ .Values.kafka.statefull.matchLabels }}  # has to match .spec.template.metadata.labels
    spec:
      restartPolicy: {{ .Values.kafka.statefull.restartPolicy }}
      containers:
      - name: {{ .Values.kafka.statefull.container.name }}
        image: {{ .Values.Values.kafka.statefull.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.kafka.statefull.image.pullPolicy }}
        resources:
            requests:
              cpu: {{ .Values.kafka.statefull.requests.cpu }}
              memory: {{ .Values.kafka.statefull.resources.requests.memory }}
            limits:
              cpu: {{ .Values.kafka.statefull.resources.limits.cpu }}
              memory: {{ .Values.kafka.statefull.resources.limits.memory }}

        env:
          - name: KAFKA_CFG_ZOOKEEPER_CONNECT
            value: zookeeper-0.zookeeper:2181
          - name: KAFKA_CFG_BROKER_ID
            value: ${HOSTNAME##*-}
            # value: echo $HOSTNAME | rev | cut -d'-' -f1 | rev
          - name: ALLOW_PLAINTEXT_LISTENER
            value: yes
          - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
            value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
          - name: KAFKA_CFG_LISTENERS
            value: INSIDE://:9092,OUTSIDE://:9093
          - name: KAFKA_CFG_ADVERTISED_LISTENERS
            value: INSIDE://:9092,OUTSIDE://$HOSTNAME:9093
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: INSIDE
          - name: KAFKA_CFG_AUTO_LEADER_REBALANCE_ENABLE
            value: true
        # envFrom:
        # - configMapRef:
        #     name: {{ .Values.kafka.configmap.name }}

        volumeMounts:
        - mountPath: /bitnami/kafka
          name: {{ .Values.name }}-gluster-volume

      nodeSelector:
            name-node: {{ .Values.nodeSelector.nameNode1 }}

        volumes:
        - name: {{ .Values.name }}-gluster-volume
          glusterfs:
            endpoints: {{ .Values.name }}-endpoint
            path: volume1 
            readOnly: no

  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.name }}-gluster-volume
      labels:
        statefulset: {{ .Values.kafka.statefull.matchLabels }}
    spec:
      accessModes: 
        - ReadWriteOnce
        - ReadOnlyMany
        - ReadWriteMany
      storageClassName: slow
      resources:
        requests:
          storage: 100Gi